// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShipmentDeliveryAPI.Data;

#nullable disable

namespace ShipmentDeliveryAPI.Migrations
{
    [DbContext(typeof(ShipmentDeliveryContext))]
    partial class ShipmentDeliveryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.BulkItem", b =>
                {
                    b.Property<int>("BulkItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BulkItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("EvdSealNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaterialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BulkItemId");

                    b.HasIndex("DeliveryId", "MaterialNumber", "EvdSealNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_BulkItem_Unique");

                    b.ToTable("BulkItems");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.ContainerItem", b =>
                {
                    b.Property<int>("ContainerItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContainerItemId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<string>("MaterialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ContainerItemId");

                    b.HasIndex("DeliveryId", "MaterialNumber", "SerialNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_ContainerItem_Unique");

                    b.ToTable("ContainerItems");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DeliveryId");

                    b.HasIndex("DeliveryNumber")
                        .IsUnique();

                    b.HasIndex("ShipmentId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.Shipment", b =>
                {
                    b.Property<int>("ShipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipmentId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipmentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ShipmentId");

                    b.HasIndex("ShipmentNumber")
                        .IsUnique();

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.BulkItem", b =>
                {
                    b.HasOne("ShipmentDeliveryAPI.Models.Delivery", "Delivery")
                        .WithMany("BulkItems")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.ContainerItem", b =>
                {
                    b.HasOne("ShipmentDeliveryAPI.Models.Delivery", "Delivery")
                        .WithMany("ContainerItems")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.Delivery", b =>
                {
                    b.HasOne("ShipmentDeliveryAPI.Models.Shipment", "Shipment")
                        .WithMany("Deliveries")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.Delivery", b =>
                {
                    b.Navigation("BulkItems");

                    b.Navigation("ContainerItems");
                });

            modelBuilder.Entity("ShipmentDeliveryAPI.Models.Shipment", b =>
                {
                    b.Navigation("Deliveries");
                });
#pragma warning restore 612, 618
        }
    }
}
